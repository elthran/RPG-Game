"""Blank database

Revision ID: 382cd58dba81
Revises: 
Create Date: 2018-03-29 17:59:07.340290

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '382cd58dba81'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    engine = op.get_bind()
    engine.execute("SET FOREIGN_KEY_CHECKS=0;")

    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('monster_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('species', sa.String(length=50), nullable=True),
    sa.Column('species_plural', sa.String(length=50), nullable=True),
    sa.Column('level_min', sa.Integer(), nullable=True),
    sa.Column('level_max', sa.Integer(), nullable=True),
    sa.Column('experience_rewarded', sa.Integer(), nullable=True),
    sa.Column('city', sa.Boolean(), nullable=True),
    sa.Column('forest', sa.Boolean(), nullable=True),
    sa.Column('cave', sa.Boolean(), nullable=True),
    sa.Column('level_modifier', sa.Integer(), nullable=True),
    sa.Column('agility', sa.Integer(), nullable=True),
    sa.Column('charisma', sa.Integer(), nullable=True),
    sa.Column('divinity', sa.Integer(), nullable=True),
    sa.Column('resilience', sa.Integer(), nullable=True),
    sa.Column('fortuity', sa.Integer(), nullable=True),
    sa.Column('pathfinding', sa.Integer(), nullable=True),
    sa.Column('quickness', sa.Integer(), nullable=True),
    sa.Column('willpower', sa.Integer(), nullable=True),
    sa.Column('brawn', sa.Integer(), nullable=True),
    sa.Column('survivalism', sa.Integer(), nullable=True),
    sa.Column('vitality', sa.Integer(), nullable=True),
    sa.Column('intellect', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_monster_template'))
    )
    op.create_table('base_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('str_key', sa.String(length=50), nullable=True),
    sa.Column('int_key', sa.Integer(), nullable=True),
    sa.Column('str_value', sa.String(length=50), nullable=True),
    sa.Column('int_value', sa.Integer(), nullable=True),
    sa.Column('base_dict_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['base_dict_id'], ['base_dict.id'], name=op.f('fk_base_item_base_dict_id_base_dict')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_base_item'))
    )
    op.create_table('base_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('int_value', sa.Integer(), nullable=True),
    sa.Column('str_value', sa.String(length=50), nullable=True),
    sa.Column('dict_id_keys', sa.Integer(), nullable=True),
    sa.Column('dict_id_values', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dict_id_keys'], ['base_dict.id'], name=op.f('fk_base_list_dict_id_keys_base_dict')),
    sa.ForeignKeyConstraint(['dict_id_values'], ['base_dict.id'], name=op.f('fk_base_list_dict_id_values_base_dict')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_base_list'))
    )
    op.create_table('board',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('forum_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['forum_id'], ['forum.id'], name=op.f('fk_board_forum_id_forum')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_board'))
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('url', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('terrain', sa.String(length=50), nullable=True),
    sa.Column('display_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['display_id'], ['display.id'], name=op.f('fk_location_display_id_display')),
    sa.ForeignKeyConstraint(['parent_id'], ['location.id'], name=op.f('fk_location_parent_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location')),
    sa.UniqueConstraint('name', name=op.f('uq_location_name'))
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=50), nullable=True),
    sa.Column('unread', sa.Boolean(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['inbox.id'], name=op.f('fk_message_receiver_id_inbox')),
    sa.ForeignKeyConstraint(['sender_id'], ['inbox.id'], name=op.f('fk_message_sender_id_inbox')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_message'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('inbox_alert', sa.Boolean(), nullable=True),
    sa.Column('prestige', sa.Integer(), nullable=True),
    sa.Column('inbox_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inbox_id'], ['inbox.id'], name=op.f('fk_user_inbox_id_inbox')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    op.create_table('adjacent_location',
    sa.Column('out_adjacent_id', sa.Integer(), nullable=False),
    sa.Column('in_adjacent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['in_adjacent_id'], ['location.id'], name=op.f('fk_adjacent_location_in_adjacent_id_location')),
    sa.ForeignKeyConstraint(['out_adjacent_id'], ['location.id'], name=op.f('fk_adjacent_location_out_adjacent_id_location')),
    sa.PrimaryKeyConstraint('out_adjacent_id', 'in_adjacent_id', name=op.f('pk_adjacent_location'))
    )
    op.create_table('hero',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('background', sa.String(length=50), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('house', sa.String(length=50), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('experience_maximum', sa.Integer(), nullable=True),
    sa.Column('renown', sa.Integer(), nullable=True),
    sa.Column('virtue', sa.Integer(), nullable=True),
    sa.Column('devotion', sa.Integer(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('basic_ability_points', sa.Integer(), nullable=True),
    sa.Column('archetype_ability_points', sa.Integer(), nullable=True),
    sa.Column('calling_ability_points', sa.Integer(), nullable=True),
    sa.Column('pantheon_ability_points', sa.Integer(), nullable=True),
    sa.Column('attribute_points', sa.Integer(), nullable=True),
    sa.Column('proficiency_points', sa.Integer(), nullable=True),
    sa.Column('current_terrain', sa.String(length=50), nullable=True),
    sa.Column('deepest_dungeon_floor', sa.Integer(), nullable=True),
    sa.Column('current_dungeon_floor', sa.Integer(), nullable=True),
    sa.Column('current_dungeon_floor_progress', sa.Integer(), nullable=True),
    sa.Column('random_encounter_monster', sa.Boolean(), nullable=True),
    sa.Column('player_kills', sa.Integer(), nullable=True),
    sa.Column('monster_kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.String(length=50), nullable=True),
    sa.Column('login_alerts', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('map_id', sa.Integer(), nullable=True),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('last_city_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['location.id'], name=op.f('fk_hero_city_id_location')),
    sa.ForeignKeyConstraint(['current_location_id'], ['location.id'], name=op.f('fk_hero_current_location_id_location')),
    sa.ForeignKeyConstraint(['last_city_id'], ['location.id'], name=op.f('fk_hero_last_city_id_location')),
    sa.ForeignKeyConstraint(['map_id'], ['location.id'], name=op.f('fk_hero_map_id_location')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_hero_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hero'))
    )
    op.create_table('thread',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('creator', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['board.id'], name=op.f('fk_thread_board_id_board')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_thread'))
    )
    op.create_table('abilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_abilities_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_abilities'))
    )
    op.create_table('attributes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_attributes_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attributes'))
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_inventory_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory'))
    )
    op.create_table('journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_journal_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_journal'))
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['thread_id'], ['thread.id'], name=op.f('fk_post_thread_id_thread')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post'))
    )
    op.create_table('proficiencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_proficiencies_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_proficiencies'))
    )
    op.create_table('specialization_container',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_specialization_container_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_specialization_container'))
    )
    op.create_table('trigger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template', sa.Boolean(), nullable=True),
    sa.Column('event_name', sa.String(length=50), nullable=True),
    sa.Column('extra_info_for_humans', sa.String(length=200), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_trigger_hero_id_hero'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trigger'))
    )
    op.create_table('ability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('max_level', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('cost', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('learnable', sa.Boolean(), nullable=True),
    sa.Column('tree', sa.String(length=50), nullable=True),
    sa.Column('tree_type', sa.String(length=50), nullable=True),
    sa.Column('image', sa.String(length=50), nullable=True),
    sa.Column('abilities_id', sa.Integer(), nullable=True),
    sa.Column('castable', sa.Boolean(), nullable=True),
    sa.Column('sanctity_cost', sa.Integer(), nullable=True),
    sa.Column('endurance_cost', sa.Integer(), nullable=True),
    sa.Column('heal_amount', sa.Integer(), nullable=True),
    sa.Column('gold_amount', sa.Integer(), nullable=True),
    sa.Column('health_maximum', sa.Integer(), nullable=True),
    sa.Column('sanctity_maximum', sa.Integer(), nullable=True),
    sa.Column('damage_maximum', sa.Integer(), nullable=True),
    sa.Column('damage_minimum', sa.Integer(), nullable=True),
    sa.Column('understanding_modifier', sa.Integer(), nullable=True),
    sa.Column('stealth_chance', sa.Integer(), nullable=True),
    sa.Column('firststrike_chance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['abilities_id'], ['abilities.id'], name=op.f('fk_ability_abilities_id_abilities'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ability'))
    )
    op.create_table('attribute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('agility_id', sa.Integer(), nullable=True),
    sa.Column('brawn_id', sa.Integer(), nullable=True),
    sa.Column('charisma_id', sa.Integer(), nullable=True),
    sa.Column('divinity_id', sa.Integer(), nullable=True),
    sa.Column('fortuity_id', sa.Integer(), nullable=True),
    sa.Column('intellect_id', sa.Integer(), nullable=True),
    sa.Column('pathfinding_id', sa.Integer(), nullable=True),
    sa.Column('quickness_id', sa.Integer(), nullable=True),
    sa.Column('resilience_id', sa.Integer(), nullable=True),
    sa.Column('survivalism_id', sa.Integer(), nullable=True),
    sa.Column('vitality_id', sa.Integer(), nullable=True),
    sa.Column('willpower_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agility_id'], ['attributes.id'], name=op.f('fk_attribute_agility_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['brawn_id'], ['attributes.id'], name=op.f('fk_attribute_brawn_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['charisma_id'], ['attributes.id'], name=op.f('fk_attribute_charisma_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['divinity_id'], ['attributes.id'], name=op.f('fk_attribute_divinity_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fortuity_id'], ['attributes.id'], name=op.f('fk_attribute_fortuity_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['intellect_id'], ['attributes.id'], name=op.f('fk_attribute_intellect_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pathfinding_id'], ['attributes.id'], name=op.f('fk_attribute_pathfinding_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quickness_id'], ['attributes.id'], name=op.f('fk_attribute_quickness_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resilience_id'], ['attributes.id'], name=op.f('fk_attribute_resilience_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['survivalism_id'], ['attributes.id'], name=op.f('fk_attribute_survivalism_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vitality_id'], ['attributes.id'], name=op.f('fk_attribute_vitality_id_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['willpower_id'], ['attributes.id'], name=op.f('fk_attribute_willpower_id_attributes'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attribute'))
    )
    op.create_table('condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=200), nullable=True),
    sa.Column('trigger_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_condition_location_id_location')),
    sa.ForeignKeyConstraint(['trigger_id'], ['trigger.id'], name=op.f('fk_condition_trigger_id_trigger')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_condition'))
    )
    op.create_table('item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('image', sa.String(length=50), nullable=True),
    sa.Column('buy_price', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('broken', sa.Boolean(), nullable=True),
    sa.Column('consumable', sa.Boolean(), nullable=True),
    sa.Column('consumed', sa.Boolean(), nullable=True),
    sa.Column('item_rating', sa.Integer(), nullable=True),
    sa.Column('garment', sa.Boolean(), nullable=True),
    sa.Column('weapon', sa.Boolean(), nullable=True),
    sa.Column('jewelry', sa.Boolean(), nullable=True),
    sa.Column('max_durability', sa.Integer(), nullable=True),
    sa.Column('wearable', sa.Boolean(), nullable=True),
    sa.Column('inventory_id', sa.Integer(), nullable=True),
    sa.Column('equipped', sa.Boolean(), nullable=True),
    sa.Column('ring_position', sa.Integer(), nullable=True),
    sa.Column('unequipped_position', sa.Integer(), nullable=True),
    sa.Column('style', sa.String(length=50), nullable=True),
    sa.Column('health_maximum', sa.Integer(), nullable=True),
    sa.Column('regeneration_speed', sa.Integer(), nullable=True),
    sa.Column('recovery_efficiency', sa.Integer(), nullable=True),
    sa.Column('climbing_ability', sa.Integer(), nullable=True),
    sa.Column('storage_maximum', sa.Integer(), nullable=True),
    sa.Column('encumbrance_amount', sa.Integer(), nullable=True),
    sa.Column('endurance_maximum', sa.Integer(), nullable=True),
    sa.Column('damage_minimum', sa.Integer(), nullable=True),
    sa.Column('damage_maximum', sa.Integer(), nullable=True),
    sa.Column('damage_modifier', sa.Integer(), nullable=True),
    sa.Column('speed_speed', sa.Integer(), nullable=True),
    sa.Column('accuracy_accuracy', sa.Integer(), nullable=True),
    sa.Column('first_strike_chance', sa.Integer(), nullable=True),
    sa.Column('killshot_chance', sa.Integer(), nullable=True),
    sa.Column('killshot_modifier', sa.Integer(), nullable=True),
    sa.Column('defence_modifier', sa.Integer(), nullable=True),
    sa.Column('evade_chance', sa.Integer(), nullable=True),
    sa.Column('parry_chance', sa.Integer(), nullable=True),
    sa.Column('flee_chance', sa.Integer(), nullable=True),
    sa.Column('riposte_chance', sa.Integer(), nullable=True),
    sa.Column('fatigue_maximum', sa.Integer(), nullable=True),
    sa.Column('block_chance', sa.Integer(), nullable=True),
    sa.Column('block_modifier', sa.Integer(), nullable=True),
    sa.Column('stealth_chance', sa.Integer(), nullable=True),
    sa.Column('pickpocketing_chance', sa.Integer(), nullable=True),
    sa.Column('faith_modifier', sa.Integer(), nullable=True),
    sa.Column('sanctity_maximum', sa.Integer(), nullable=True),
    sa.Column('resist_holy_modifier', sa.Integer(), nullable=True),
    sa.Column('bartering_modifier', sa.Integer(), nullable=True),
    sa.Column('oration_modifier', sa.Integer(), nullable=True),
    sa.Column('charm_modifier', sa.Integer(), nullable=True),
    sa.Column('trustworthiness_modifier', sa.Integer(), nullable=True),
    sa.Column('renown_modifier', sa.Integer(), nullable=True),
    sa.Column('knowledge_modifier', sa.Integer(), nullable=True),
    sa.Column('literacy_modifier', sa.Integer(), nullable=True),
    sa.Column('understanding_modifier', sa.Integer(), nullable=True),
    sa.Column('luckiness_chance', sa.Integer(), nullable=True),
    sa.Column('adventuring_chance', sa.Integer(), nullable=True),
    sa.Column('logistics_modifier', sa.Integer(), nullable=True),
    sa.Column('mountaineering_modifier', sa.Integer(), nullable=True),
    sa.Column('woodsman_modifier', sa.Integer(), nullable=True),
    sa.Column('navigator_modifier', sa.Integer(), nullable=True),
    sa.Column('detection_chance', sa.Integer(), nullable=True),
    sa.Column('caution_ability', sa.Integer(), nullable=True),
    sa.Column('explorer_ability', sa.Integer(), nullable=True),
    sa.Column('huntsman_ability', sa.Integer(), nullable=True),
    sa.Column('survivalist_ability', sa.Integer(), nullable=True),
    sa.Column('resist_frost_modifier', sa.Integer(), nullable=True),
    sa.Column('resist_flame_modifier', sa.Integer(), nullable=True),
    sa.Column('resist_shadow_modifier', sa.Integer(), nullable=True),
    sa.Column('resist_poison_modifier', sa.Integer(), nullable=True),
    sa.Column('resist_blunt_modifier', sa.Integer(), nullable=True),
    sa.Column('resist_slashing_modifier', sa.Integer(), nullable=True),
    sa.Column('resist_piercing_modifier', sa.Integer(), nullable=True),
    sa.Column('courage_skill', sa.Integer(), nullable=True),
    sa.Column('sanity_skill', sa.Integer(), nullable=True),
    sa.Column('one_handed_weapon', sa.Boolean(), nullable=True),
    sa.Column('shield', sa.Boolean(), nullable=True),
    sa.Column('two_handed_weapon', sa.Boolean(), nullable=True),
    sa.Column('armour_value', sa.Integer(), nullable=True),
    sa.Column('head_armour', sa.Boolean(), nullable=True),
    sa.Column('shoulder_armour', sa.Boolean(), nullable=True),
    sa.Column('chest_armour', sa.Boolean(), nullable=True),
    sa.Column('leg_armour', sa.Boolean(), nullable=True),
    sa.Column('foot_armour', sa.Boolean(), nullable=True),
    sa.Column('arm_armour', sa.Boolean(), nullable=True),
    sa.Column('hand_armour', sa.Boolean(), nullable=True),
    sa.Column('ring', sa.Boolean(), nullable=True),
    sa.Column('healing_amount', sa.Integer(), nullable=True),
    sa.Column('sanctity_amount', sa.Integer(), nullable=True),
    sa.Column('quest_item', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], name=op.f('fk_item_inventory_id_inventory'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_item'))
    )
    op.create_table('proficiency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('tooltip', sa.String(length=50), nullable=True),
    sa.Column('attribute_type', sa.String(length=50), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('next_value', sa.Integer(), nullable=True),
    sa.Column('is_not_max_level', sa.Boolean(), nullable=True),
    sa.Column('reason_for_zero', sa.String(length=50), nullable=True),
    sa.Column('error', sa.String(length=50), nullable=True),
    sa.Column('formatted_name', sa.String(length=50), nullable=True),
    sa.Column('ability', sa.Integer(), nullable=True),
    sa.Column('accuracy', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('chance', sa.Integer(), nullable=True),
    sa.Column('current', sa.Integer(), nullable=True),
    sa.Column('efficiency', sa.Integer(), nullable=True),
    sa.Column('maximum', sa.Integer(), nullable=True),
    sa.Column('minimum', sa.Integer(), nullable=True),
    sa.Column('modifier', sa.Integer(), nullable=True),
    sa.Column('skill', sa.Integer(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('proficiencies_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proficiencies_id'], ['proficiencies.id'], name=op.f('fk_proficiency_proficiencies_id_proficiencies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_proficiency'))
    )
    op.create_table('quest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('reward_experience', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('trigger_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['trigger_id'], ['trigger.id'], name=op.f('fk_quest_trigger_id_trigger')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quest'))
    )
    op.create_table('quest_path',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('reward_experience', sa.Integer(), nullable=True),
    sa.Column('stage', sa.Integer(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('journal_id', sa.Integer(), nullable=True),
    sa.Column('notification_id', sa.Integer(), nullable=True),
    sa.Column('trigger_id', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('_hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['journal.id'], name=op.f('fk_quest_path_journal_id_journal')),
    sa.ForeignKeyConstraint(['notification_id'], ['journal.id'], name=op.f('fk_quest_path_notification_id_journal')),
    sa.ForeignKeyConstraint(['trigger_id'], ['trigger.id'], name=op.f('fk_quest_path_trigger_id_trigger')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quest_path'))
    )
    op.create_table('specialization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('requirements', sa.String(length=50), nullable=True),
    sa.Column('archetype_id', sa.Integer(), nullable=True),
    sa.Column('calling_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['archetype_id'], ['specialization_container.id'], name=op.f('fk_specialization_archetype_id_specialization_container'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['calling_id'], ['specialization_container.id'], name=op.f('fk_specialization_calling_id_specialization_container'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_specialization'))
    )
    op.create_table('quest_path_to_quest',
    sa.Column('quest_path_id', sa.Integer(), nullable=True),
    sa.Column('quest_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name=op.f('fk_quest_path_to_quest_quest_id_quest')),
    sa.ForeignKeyConstraint(['quest_path_id'], ['quest_path.id'], name=op.f('fk_quest_path_to_quest_quest_path_id_quest_path'))
    )
    # ### end Alembic commands ###
    engine.execute("SET FOREIGN_KEY_CHECKS=1;")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quest_path_to_quest')
    op.drop_table('specialization')
    op.drop_table('quest_path')
    op.drop_table('quest')
    op.drop_table('proficiency')
    op.drop_table('item')
    op.drop_table('condition')
    op.drop_table('attribute')
    op.drop_table('ability')
    op.drop_table('trigger')
    op.drop_table('specialization_container')
    op.drop_table('proficiencies')
    op.drop_table('post')
    op.drop_table('journal')
    op.drop_table('inventory')
    op.drop_table('attributes')
    op.drop_table('abilities')
    op.drop_table('thread')
    op.drop_table('hero')
    op.drop_table('adjacent_location')
    op.drop_table('user')
    op.drop_table('message')
    op.drop_table('location')
    op.drop_table('board')
    op.drop_table('base_list')
    op.drop_table('base_item')
    op.drop_table('monster_template')
    # ### end Alembic commands ###
