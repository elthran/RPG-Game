"""Latest Schema

Revision ID: b476621dc83e
Revises: 2705b1c78056
Create Date: 2018-03-29 19:33:17.451842

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b476621dc83e'
down_revision = '2705b1c78056'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adjacent_location_association',
    sa.Column('out_adjacent_id', sa.Integer(), nullable=True),
    sa.Column('in_adjacent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['in_adjacent_id'], ['location.id'], name=op.f('fk_adjacent_location_association_in_adjacent_id_location'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['out_adjacent_id'], ['location.id'], name=op.f('fk_adjacent_location_association_out_adjacent_id_location'), ondelete='SET NULL')
    )
    op.create_table('condition_to_trigger',
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.Column('trigger_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['condition_id'], ['condition.id'], name=op.f('fk_condition_to_trigger_condition_id_condition'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['trigger_id'], ['trigger.id'], name=op.f('fk_condition_to_trigger_trigger_id_trigger'), ondelete='SET NULL')
    )
    op.create_table('handler',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_master', sa.String(length=50), nullable=True),
    sa.Column('trigger_id', sa.Integer(), nullable=True),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name=op.f('fk_handler_hero_id_hero'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trigger_id'], ['trigger.id'], name=op.f('fk_handler_trigger_id_trigger'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_handler'))
    )
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('journal_id', sa.Integer(), nullable=True),
    sa.Column('deepest_dungeon_floor', sa.Integer(), nullable=True),
    sa.Column('current_dungeon_floor', sa.Integer(), nullable=True),
    sa.Column('current_dungeon_floor_progress', sa.Integer(), nullable=True),
    sa.Column('player_kills', sa.Integer(), nullable=True),
    sa.Column('monster_kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('wolf_kills', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['journal.id'], name=op.f('fk_achievements_journal_id_journal'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievements'))
    )
    op.create_table('achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('achievements_id', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('current_level', sa.Integer(), nullable=True),
    sa.Column('next_level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['achievements_id'], ['achievements.id'], name=op.f('fk_achievement_achievements_id_achievements'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievement'))
    )
    op.create_table('entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('info', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('journal_id', sa.Integer(), nullable=True),
    sa.Column('_beast', sa.String(length=50), nullable=True),
    sa.Column('_person', sa.String(length=50), nullable=True),
    sa.Column('_place', sa.String(length=50), nullable=True),
    sa.Column('_quest_path_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_quest_path_id'], ['quest_path.id'], name=op.f('fk_entry__quest_path_id_quest_path')),
    sa.ForeignKeyConstraint(['journal_id'], ['journal.id'], name=op.f('fk_entry_journal_id_journal'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_entry'))
    )
    op.create_table('quest_path_to_quest_association',
    sa.Column('quest_path_id', sa.Integer(), nullable=True),
    sa.Column('quest_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name=op.f('fk_quest_path_to_quest_association_quest_id_quest'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['quest_path_id'], ['quest_path.id'], name=op.f('fk_quest_path_to_quest_association_quest_path_id_quest_path'), ondelete='SET NULL')
    )

    # It is important to move the data over before dropping any colums
    # using the session.
    meta = sa.MetaData(bind=op.get_bind())
    meta.reflect()

    Session = sa.orm.sessionmaker()
    session = Session(bind=op.get_bind())

    abilities_table = session.query(meta.tables['abilities']).all()
    print(abilities_table)

    ability_table = session.query(meta.tables['hero']).all()
    Temp = type('Temp', (object,), {})
    sa.orm.mapper(Temp, ability_table)
    for item in abilities_table:
        pass
    exit()

    op.drop_table('abilities')
    op.drop_table('base_list')
    op.drop_table('attributes')
    op.drop_table('base_dict')
    op.drop_table('base_item')
    op.drop_table('adjacent_location')
    op.drop_table('specialization_container')
    op.drop_table('proficiencies')
    op.drop_table('quest_path_to_quest')
    op.add_column('ability', sa.Column('_current', sa.String(length=50), nullable=True))
    op.add_column('ability', sa.Column('_next', sa.String(length=50), nullable=True))
    op.add_column('ability', sa.Column('hero_id', sa.Integer(), nullable=True))
    op.drop_constraint('fk_ability_abilities_id_abilities', 'ability', type_='foreignkey')
    op.create_foreign_key(op.f('fk_ability_hero_id_hero'), 'ability', 'hero', ['hero_id'], ['id'], ondelete='CASCADE')
    op.drop_column('ability', 'damage_maximum')
    op.drop_column('ability', 'stealth_chance')
    op.drop_column('ability', 'damage_minimum')
    op.drop_column('ability', 'abilities_id')
    op.drop_column('ability', 'gold_amount')
    op.drop_column('ability', 'sanctity_cost')
    op.drop_column('ability', 'endurance_cost')
    op.drop_column('ability', 'health_maximum')
    op.drop_column('ability', 'firststrike_chance')
    op.drop_column('ability', 'heal_amount')
    op.drop_column('ability', 'understanding_modifier')
    op.drop_column('ability', 'sanctity_maximum')
    op.add_column('attribute', sa.Column('hero_id', sa.Integer(), nullable=True))
    op.add_column('attribute', sa.Column('type_', sa.String(length=50), nullable=True))
    op.drop_constraint('fk_attribute_pathfinding_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_quickness_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_survivalism_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_resilience_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_brawn_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_vitality_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_divinity_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_willpower_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_agility_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_intellect_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_fortuity_id_attributes', 'attribute', type_='foreignkey')
    op.drop_constraint('fk_attribute_charisma_id_attributes', 'attribute', type_='foreignkey')
    op.create_foreign_key(op.f('fk_attribute_hero_id_hero'), 'attribute', 'hero', ['hero_id'], ['id'], ondelete='CASCADE')
    op.drop_column('attribute', 'charisma_id')
    op.drop_column('attribute', 'survivalism_id')
    op.drop_column('attribute', 'quickness_id')
    op.drop_column('attribute', 'willpower_id')
    op.drop_column('attribute', 'resilience_id')
    op.drop_column('attribute', 'agility_id')
    op.drop_column('attribute', 'brawn_id')
    op.drop_column('attribute', 'fortuity_id')
    op.drop_column('attribute', 'divinity_id')
    op.drop_column('attribute', 'vitality_id')
    op.drop_column('attribute', 'intellect_id')
    op.drop_column('attribute', 'pathfinding_id')
    op.drop_constraint('fk_board_forum_id_forum', 'board', type_='foreignkey')
    op.create_foreign_key(op.f('fk_board_forum_id_forum'), 'board', 'forum', ['forum_id'], ['id'], ondelete='CASCADE')
    op.add_column('condition', sa.Column('comparison', sa.String(length=2), nullable=True))
    op.add_column('condition', sa.Column('condition_attribute', sa.String(length=50), nullable=True))
    op.add_column('condition', sa.Column('hero_attribute', sa.String(length=50), nullable=True))
    op.drop_constraint('fk_condition_trigger_id_trigger', 'condition', type_='foreignkey')
    op.drop_constraint('fk_condition_location_id_location', 'condition', type_='foreignkey')
    op.create_foreign_key(op.f('fk_condition_location_id_location'), 'condition', 'location', ['location_id'], ['id'], ondelete='CASCADE')
    op.drop_column('condition', 'trigger_id')
    op.add_column('display', sa.Column('location_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_display_location_id_location'), 'display', 'location', ['location_id'], ['id'], ondelete='CASCADE')
    op.add_column('hero', sa.Column('creation_phase', sa.Boolean(), nullable=True))
    op.drop_constraint('fk_hero_last_city_id_location', 'hero', type_='foreignkey')
    op.drop_constraint('fk_hero_map_id_location', 'hero', type_='foreignkey')
    op.drop_constraint('fk_hero_current_location_id_location', 'hero', type_='foreignkey')
    op.drop_constraint('fk_hero_city_id_location', 'hero', type_='foreignkey')
    op.create_foreign_key(op.f('fk_hero_city_id_location'), 'hero', 'location', ['city_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(op.f('fk_hero_current_location_id_location'), 'hero', 'location', ['current_location_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(op.f('fk_hero_last_city_id_location'), 'hero', 'location', ['last_city_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(op.f('fk_hero_map_id_location'), 'hero', 'location', ['map_id'], ['id'], ondelete='SET NULL')
    op.drop_column('hero', 'devotion')
    op.drop_column('hero', 'deaths')
    op.drop_column('hero', 'virtue')
    op.drop_column('hero', 'renown')
    op.drop_column('hero', 'monster_kills')
    op.drop_column('hero', 'current_dungeon_floor')
    op.drop_column('hero', 'current_dungeon_floor_progress')
    op.drop_column('hero', 'deepest_dungeon_floor')
    op.drop_column('hero', 'player_kills')
    op.add_column('inbox', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_inbox_user_id_user'), 'inbox', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('item', sa.Column('affinity', sa.Integer(), nullable=True))
    op.add_column('item', sa.Column('description', sa.String(length=200), nullable=True))
    op.drop_column('item', 'flee_chance')
    op.drop_column('item', 'charm_modifier')
    op.drop_column('item', 'faith_modifier')
    op.drop_column('item', 'resist_frost_modifier')
    op.drop_column('item', 'fatigue_maximum')
    op.drop_column('item', 'evade_chance')
    op.drop_column('item', 'resist_poison_modifier')
    op.drop_column('item', 'climbing_ability')
    op.drop_column('item', 'resist_blunt_modifier')
    op.drop_column('item', 'endurance_maximum')
    op.drop_column('item', 'literacy_modifier')
    op.drop_column('item', 'resist_piercing_modifier')
    op.drop_column('item', 'resist_shadow_modifier')
    op.drop_column('item', 'bartering_modifier')
    op.drop_column('item', 'renown_modifier')
    op.drop_column('item', 'recovery_efficiency')
    op.drop_column('item', 'riposte_chance')
    op.drop_column('item', 'understanding_modifier')
    op.drop_column('item', 'woodsman_modifier')
    op.drop_column('item', 'survivalist_ability')
    op.drop_column('item', 'explorer_ability')
    op.drop_column('item', 'killshot_chance')
    op.drop_column('item', 'parry_chance')
    op.drop_column('item', 'huntsman_ability')
    op.drop_column('item', 'detection_chance')
    op.drop_column('item', 'stealth_chance')
    op.drop_column('item', 'mountaineering_modifier')
    op.drop_column('item', 'resist_holy_modifier')
    op.drop_column('item', 'regeneration_speed')
    op.drop_column('item', 'accuracy_accuracy')
    op.drop_column('item', 'damage_minimum')
    op.drop_column('item', 'logistics_modifier')
    op.drop_column('item', 'sanity_skill')
    op.drop_column('item', 'navigator_modifier')
    op.drop_column('item', 'damage_modifier')
    op.drop_column('item', 'trustworthiness_modifier')
    op.drop_column('item', 'resist_slashing_modifier')
    op.drop_column('item', 'courage_skill')
    op.drop_column('item', 'knowledge_modifier')
    op.drop_column('item', 'sanctity_maximum')
    op.drop_column('item', 'caution_ability')
    op.drop_column('item', 'killshot_modifier')
    op.drop_column('item', 'damage_maximum')
    op.drop_column('item', 'encumbrance_amount')
    op.drop_column('item', 'resist_flame_modifier')
    op.drop_column('item', 'defence_modifier')
    op.drop_column('item', 'block_chance')
    op.drop_column('item', 'storage_maximum')
    op.drop_column('item', 'adventuring_chance')
    op.drop_column('item', 'luckiness_chance')
    op.drop_column('item', 'oration_modifier')
    op.drop_column('item', 'armour_value')
    op.drop_column('item', 'speed_speed')
    op.drop_column('item', 'block_modifier')
    op.drop_column('item', 'health_maximum')
    op.drop_column('item', 'pickpocketing_chance')
    op.drop_column('item', 'first_strike_chance')
    op.drop_constraint('fk_location_display_id_display', 'location', type_='foreignkey')
    op.drop_constraint('fk_location_parent_id_location', 'location', type_='foreignkey')
    op.create_foreign_key(op.f('fk_location_parent_id_location'), 'location', 'location', ['parent_id'], ['id'], ondelete='CASCADE')
    op.drop_column('location', 'display_id')
    op.drop_constraint('fk_message_receiver_id_inbox', 'message', type_='foreignkey')
    op.drop_constraint('fk_message_sender_id_inbox', 'message', type_='foreignkey')
    op.create_foreign_key(op.f('fk_message_sender_id_inbox'), 'message', 'inbox', ['sender_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_message_receiver_id_inbox'), 'message', 'inbox', ['receiver_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_post_thread_id_thread', 'post', type_='foreignkey')
    op.drop_constraint('fk_post_user_id_user', 'post', type_='foreignkey')
    op.create_foreign_key(op.f('fk_post_user_id_user'), 'post', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_post_thread_id_thread'), 'post', 'thread', ['thread_id'], ['id'], ondelete='CASCADE')
    op.add_column('proficiency', sa.Column('ability_id', sa.Integer(), nullable=True))
    op.add_column('proficiency', sa.Column('base', sa.Integer(), nullable=True))
    op.add_column('proficiency', sa.Column('hero_id', sa.Integer(), nullable=True))
    op.add_column('proficiency', sa.Column('hidden', sa.Boolean(), nullable=True))
    op.add_column('proficiency', sa.Column('item_id', sa.Integer(), nullable=True))
    op.add_column('proficiency', sa.Column('template', sa.Boolean(), nullable=True))
    op.add_column('proficiency', sa.Column('type_', sa.String(length=50), nullable=True))
    op.drop_constraint('fk_proficiency_proficiencies_id_proficiencies', 'proficiency', type_='foreignkey')
    op.create_foreign_key(op.f('fk_proficiency_ability_id_ability'), 'proficiency', 'ability', ['ability_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_proficiency_hero_id_hero'), 'proficiency', 'hero', ['hero_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_proficiency_item_id_item'), 'proficiency', 'item', ['item_id'], ['id'], ondelete='CASCADE')
    op.drop_column('proficiency', 'speed')
    op.drop_column('proficiency', 'accuracy')
    op.drop_column('proficiency', 'efficiency')
    op.drop_column('proficiency', 'next_value')
    op.drop_column('proficiency', 'skill')
    op.drop_column('proficiency', 'name')
    op.drop_column('proficiency', 'formatted_name')
    op.drop_column('proficiency', 'is_not_max_level')
    op.drop_column('proficiency', 'ability')
    op.drop_column('proficiency', 'chance')
    op.drop_column('proficiency', 'maximum')
    op.drop_column('proficiency', 'amount')
    op.drop_column('proficiency', 'proficiencies_id')
    op.drop_column('proficiency', 'tooltip')
    op.drop_column('proficiency', 'minimum')
    op.drop_constraint('fk_quest_trigger_id_trigger', 'quest', type_='foreignkey')
    op.create_foreign_key(op.f('fk_quest_trigger_id_trigger'), 'quest', 'trigger', ['trigger_id'], ['id'], ondelete='SET NULL')
    op.add_column('quest_path', sa.Column('handler_id', sa.Integer(), nullable=True))
    op.drop_constraint('fk_quest_path_journal_id_journal', 'quest_path', type_='foreignkey')
    op.drop_constraint('fk_quest_path_trigger_id_trigger', 'quest_path', type_='foreignkey')
    op.drop_constraint('fk_quest_path_notification_id_journal', 'quest_path', type_='foreignkey')
    op.create_foreign_key(op.f('fk_quest_path_handler_id_handler'), 'quest_path', 'handler', ['handler_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_quest_path_journal_id_journal'), 'quest_path', 'journal', ['journal_id'], ['id'], ondelete='SET NULL')
    op.drop_column('quest_path', 'trigger_id')
    op.drop_column('quest_path', '_hero_id')
    op.drop_column('quest_path', 'notification_id')
    op.add_column('specialization', sa.Column('attrib_name', sa.String(length=50), nullable=True))
    op.add_column('specialization', sa.Column('hero_id', sa.Integer(), nullable=True))
    op.add_column('specialization', sa.Column('template', sa.Boolean(), nullable=True))
    op.drop_constraint('fk_specialization_calling_id_specialization_container', 'specialization', type_='foreignkey')
    op.drop_constraint('fk_specialization_archetype_id_specialization_container', 'specialization', type_='foreignkey')
    op.create_foreign_key(op.f('fk_specialization_hero_id_hero'), 'specialization', 'hero', ['hero_id'], ['id'], ondelete='CASCADE')
    op.drop_column('specialization', 'calling_id')
    op.drop_column('specialization', 'archetype_id')
    op.drop_constraint('fk_thread_board_id_board', 'thread', type_='foreignkey')
    op.create_foreign_key(op.f('fk_thread_board_id_board'), 'thread', 'board', ['board_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_trigger_hero_id_hero', 'trigger', type_='foreignkey')
    op.drop_column('trigger', 'template')
    op.drop_column('trigger', 'hero_id')
    op.add_column('user', sa.Column('reset_key', sa.Unicode(length=200), nullable=True))
    op.drop_constraint('fk_user_inbox_id_inbox', 'user', type_='foreignkey')
    op.drop_column('user', 'inbox_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('inbox_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_user_inbox_id_inbox', 'user', 'inbox', ['inbox_id'], ['id'])
    op.drop_column('user', 'reset_key')
    op.add_column('trigger', sa.Column('hero_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('trigger', sa.Column('template', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_trigger_hero_id_hero', 'trigger', 'hero', ['hero_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('fk_thread_board_id_board'), 'thread', type_='foreignkey')
    op.create_foreign_key('fk_thread_board_id_board', 'thread', 'board', ['board_id'], ['id'])
    op.add_column('specialization', sa.Column('archetype_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('specialization', sa.Column('calling_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_specialization_hero_id_hero'), 'specialization', type_='foreignkey')
    op.create_foreign_key('fk_specialization_archetype_id_specialization_container', 'specialization', 'specialization_container', ['archetype_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_specialization_calling_id_specialization_container', 'specialization', 'specialization_container', ['calling_id'], ['id'], ondelete='CASCADE')
    op.drop_column('specialization', 'template')
    op.drop_column('specialization', 'hero_id')
    op.drop_column('specialization', 'attrib_name')
    op.add_column('quest_path', sa.Column('notification_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('quest_path', sa.Column('_hero_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('quest_path', sa.Column('trigger_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_quest_path_journal_id_journal'), 'quest_path', type_='foreignkey')
    op.drop_constraint(op.f('fk_quest_path_handler_id_handler'), 'quest_path', type_='foreignkey')
    op.create_foreign_key('fk_quest_path_notification_id_journal', 'quest_path', 'journal', ['notification_id'], ['id'])
    op.create_foreign_key('fk_quest_path_trigger_id_trigger', 'quest_path', 'trigger', ['trigger_id'], ['id'])
    op.create_foreign_key('fk_quest_path_journal_id_journal', 'quest_path', 'journal', ['journal_id'], ['id'])
    op.drop_column('quest_path', 'handler_id')
    op.drop_constraint(op.f('fk_quest_trigger_id_trigger'), 'quest', type_='foreignkey')
    op.create_foreign_key('fk_quest_trigger_id_trigger', 'quest', 'trigger', ['trigger_id'], ['id'])
    op.add_column('proficiency', sa.Column('minimum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('tooltip', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True))
    op.add_column('proficiency', sa.Column('proficiencies_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('amount', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('ability', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('is_not_max_level', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('formatted_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True))
    op.add_column('proficiency', sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True))
    op.add_column('proficiency', sa.Column('skill', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('next_value', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('efficiency', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('accuracy', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('proficiency', sa.Column('speed', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_proficiency_item_id_item'), 'proficiency', type_='foreignkey')
    op.drop_constraint(op.f('fk_proficiency_hero_id_hero'), 'proficiency', type_='foreignkey')
    op.drop_constraint(op.f('fk_proficiency_ability_id_ability'), 'proficiency', type_='foreignkey')
    op.create_foreign_key('fk_proficiency_proficiencies_id_proficiencies', 'proficiency', 'proficiencies', ['proficiencies_id'], ['id'], ondelete='CASCADE')
    op.drop_column('proficiency', 'type_')
    op.drop_column('proficiency', 'template')
    op.drop_column('proficiency', 'item_id')
    op.drop_column('proficiency', 'hidden')
    op.drop_column('proficiency', 'hero_id')
    op.drop_column('proficiency', 'base')
    op.drop_column('proficiency', 'ability_id')
    op.drop_constraint(op.f('fk_post_thread_id_thread'), 'post', type_='foreignkey')
    op.drop_constraint(op.f('fk_post_user_id_user'), 'post', type_='foreignkey')
    op.create_foreign_key('fk_post_user_id_user', 'post', 'user', ['user_id'], ['id'])
    op.create_foreign_key('fk_post_thread_id_thread', 'post', 'thread', ['thread_id'], ['id'])
    op.drop_constraint(op.f('fk_message_receiver_id_inbox'), 'message', type_='foreignkey')
    op.drop_constraint(op.f('fk_message_sender_id_inbox'), 'message', type_='foreignkey')
    op.create_foreign_key('fk_message_sender_id_inbox', 'message', 'inbox', ['sender_id'], ['id'])
    op.create_foreign_key('fk_message_receiver_id_inbox', 'message', 'inbox', ['receiver_id'], ['id'])
    op.add_column('location', sa.Column('display_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_location_parent_id_location'), 'location', type_='foreignkey')
    op.create_foreign_key('fk_location_parent_id_location', 'location', 'location', ['parent_id'], ['id'])
    op.create_foreign_key('fk_location_display_id_display', 'location', 'display', ['display_id'], ['id'])
    op.add_column('item', sa.Column('first_strike_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('pickpocketing_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('health_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('block_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('speed_speed', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('armour_value', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('oration_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('luckiness_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('adventuring_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('storage_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('block_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('defence_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_flame_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('encumbrance_amount', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('damage_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('killshot_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('caution_ability', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('sanctity_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('knowledge_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('courage_skill', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_slashing_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('trustworthiness_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('damage_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('navigator_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('sanity_skill', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('logistics_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('damage_minimum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('accuracy_accuracy', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('regeneration_speed', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_holy_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('mountaineering_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('stealth_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('detection_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('huntsman_ability', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('parry_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('killshot_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('explorer_ability', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('survivalist_ability', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('woodsman_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('understanding_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('riposte_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('recovery_efficiency', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('renown_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('bartering_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_shadow_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_piercing_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('literacy_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('endurance_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_blunt_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('climbing_ability', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_poison_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('evade_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('fatigue_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('resist_frost_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('faith_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('charm_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('flee_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_column('item', 'description')
    op.drop_column('item', 'affinity')
    op.drop_constraint(op.f('fk_inbox_user_id_user'), 'inbox', type_='foreignkey')
    op.drop_column('inbox', 'user_id')
    op.add_column('hero', sa.Column('player_kills', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('deepest_dungeon_floor', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('current_dungeon_floor_progress', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('current_dungeon_floor', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('monster_kills', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('renown', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('virtue', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('deaths', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('hero', sa.Column('devotion', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_hero_map_id_location'), 'hero', type_='foreignkey')
    op.drop_constraint(op.f('fk_hero_last_city_id_location'), 'hero', type_='foreignkey')
    op.drop_constraint(op.f('fk_hero_current_location_id_location'), 'hero', type_='foreignkey')
    op.drop_constraint(op.f('fk_hero_city_id_location'), 'hero', type_='foreignkey')
    op.create_foreign_key('fk_hero_city_id_location', 'hero', 'location', ['city_id'], ['id'])
    op.create_foreign_key('fk_hero_current_location_id_location', 'hero', 'location', ['current_location_id'], ['id'])
    op.create_foreign_key('fk_hero_map_id_location', 'hero', 'location', ['map_id'], ['id'])
    op.create_foreign_key('fk_hero_last_city_id_location', 'hero', 'location', ['last_city_id'], ['id'])
    op.drop_column('hero', 'creation_phase')
    op.drop_constraint(op.f('fk_display_location_id_location'), 'display', type_='foreignkey')
    op.drop_column('display', 'location_id')
    op.add_column('condition', sa.Column('trigger_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_condition_location_id_location'), 'condition', type_='foreignkey')
    op.create_foreign_key('fk_condition_location_id_location', 'condition', 'location', ['location_id'], ['id'])
    op.create_foreign_key('fk_condition_trigger_id_trigger', 'condition', 'trigger', ['trigger_id'], ['id'])
    op.drop_column('condition', 'hero_attribute')
    op.drop_column('condition', 'condition_attribute')
    op.drop_column('condition', 'comparison')
    op.drop_constraint(op.f('fk_board_forum_id_forum'), 'board', type_='foreignkey')
    op.create_foreign_key('fk_board_forum_id_forum', 'board', 'forum', ['forum_id'], ['id'])
    op.add_column('attribute', sa.Column('pathfinding_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('intellect_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('vitality_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('divinity_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('fortuity_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('brawn_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('agility_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('resilience_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('willpower_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('quickness_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('survivalism_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('attribute', sa.Column('charisma_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_attribute_hero_id_hero'), 'attribute', type_='foreignkey')
    op.create_foreign_key('fk_attribute_charisma_id_attributes', 'attribute', 'attributes', ['charisma_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_fortuity_id_attributes', 'attribute', 'attributes', ['fortuity_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_intellect_id_attributes', 'attribute', 'attributes', ['intellect_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_agility_id_attributes', 'attribute', 'attributes', ['agility_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_willpower_id_attributes', 'attribute', 'attributes', ['willpower_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_divinity_id_attributes', 'attribute', 'attributes', ['divinity_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_vitality_id_attributes', 'attribute', 'attributes', ['vitality_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_brawn_id_attributes', 'attribute', 'attributes', ['brawn_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_resilience_id_attributes', 'attribute', 'attributes', ['resilience_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_survivalism_id_attributes', 'attribute', 'attributes', ['survivalism_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_quickness_id_attributes', 'attribute', 'attributes', ['quickness_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attribute_pathfinding_id_attributes', 'attribute', 'attributes', ['pathfinding_id'], ['id'], ondelete='CASCADE')
    op.drop_column('attribute', 'type_')
    op.drop_column('attribute', 'hero_id')
    op.add_column('ability', sa.Column('sanctity_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('understanding_modifier', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('heal_amount', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('firststrike_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('health_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('endurance_cost', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('sanctity_cost', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('gold_amount', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('abilities_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('damage_minimum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('stealth_chance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('ability', sa.Column('damage_maximum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_ability_hero_id_hero'), 'ability', type_='foreignkey')
    op.create_foreign_key('fk_ability_abilities_id_abilities', 'ability', 'abilities', ['abilities_id'], ['id'], ondelete='CASCADE')
    op.drop_column('ability', 'hero_id')
    op.drop_column('ability', '_next')
    op.drop_column('ability', '_current')
    op.create_table('quest_path_to_quest',
    sa.Column('quest_path_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('quest_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name='fk_quest_path_to_quest_quest_id_quest'),
    sa.ForeignKeyConstraint(['quest_path_id'], ['quest_path.id'], name='fk_quest_path_to_quest_quest_path_id_quest_path'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('proficiencies',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('hero_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name='fk_proficiencies_hero_id_hero', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('specialization_container',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('hero_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name='fk_specialization_container_hero_id_hero', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('adjacent_location',
    sa.Column('out_adjacent_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('in_adjacent_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['in_adjacent_id'], ['location.id'], name='fk_adjacent_location_in_adjacent_id_location'),
    sa.ForeignKeyConstraint(['out_adjacent_id'], ['location.id'], name='fk_adjacent_location_out_adjacent_id_location'),
    sa.PrimaryKeyConstraint('out_adjacent_id', 'in_adjacent_id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('base_item',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('str_key', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('int_key', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('str_value', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('int_value', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('base_dict_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['base_dict_id'], ['base_dict.id'], name='fk_base_item_base_dict_id_base_dict'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('base_dict',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('attributes',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('hero_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name='fk_attributes_hero_id_hero', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('base_list',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('int_value', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('str_value', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('dict_id_keys', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('dict_id_values', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dict_id_keys'], ['base_dict.id'], name='fk_base_list_dict_id_keys_base_dict'),
    sa.ForeignKeyConstraint(['dict_id_values'], ['base_dict.id'], name='fk_base_list_dict_id_values_base_dict'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('abilities',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('hero_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], name='fk_abilities_hero_id_hero', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('quest_path_to_quest_association')
    op.drop_table('entry')
    op.drop_table('achievement')
    op.drop_table('achievements')
    op.drop_table('handler')
    op.drop_table('condition_to_trigger')
    op.drop_table('adjacent_location_association')
    # ### end Alembic commands ###
